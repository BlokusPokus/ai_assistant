"""
Main AgentCore class that orchestrates memory, tools, LLM, and LangGraph functionality.

📁 agent_core/core.py
Main AgentCore interface. Combines LangGraph runner, memory, tools, and LLM. 
Provides the .run(user_input) method.
"""
from .graph_runner import LangGraphRunner


class AgentCore:
    def __init__(self, memory, tools, llm):
        """
        Initializes the core agent components.

        Args:
            memory (MemoryInterface): Long-term memory access layer
            tools (ToolRegistry): Available tool functions
            llm (LLMPlanner): Gemini-based planner agent
        """
        self.runner = LangGraphRunner(memory, tools, llm)

    def run(self, user_input: str) -> str:
        """
        Entry point to run the agent.

        Args:
            user_input (str): Raw user message

        Returns:
            str: Final response generated by the agent
        """
        try:
            response = self.runner.run(user_input)
            return response
        except Exception as e:
            return f"An error occurred: {str(e)}"
